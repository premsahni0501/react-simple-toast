{"version":3,"sources":["../../src/index.js","ClassComponent.js","App.js","index.js"],"names":["ToastStateContext","createContext","ToastDispatchContext","ToastReducer","state","action","console","messages","found","m","filtered","toast","clearTimeout","Error","ToastProvider","children","useReducer","dispatch","value","useToastState","context","useContext","useToastDispatch","useToastShow","timestamp","Date","removeTimeout","setTimeout","type","timeout","msg","timer","theme","customStyle","className","ToastConsumer","useEffect","firstChildEl","document","behavior","style","role","key","Math","onClick","WrappedComponent","ClassComponent","showToast","this","props","React","Component","App","ToastWrapper","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8262ec5e.chunk.js","sourcesContent":["import React, { createContext, useReducer, useContext, useEffect } from 'react';\nimport style from './Toaster.scss'\n\nconst ToastStateContext = createContext();\nconst ToastDispatchContext = createContext();\n\nfunction ToastReducer(state, action) {\n  switch (action.type) {\n    case 'show': {\n      console.log(action);\n      return {\n        messages: [...state.messages, action.toast],\n      }\n    }\n    case 'remove': {\n      const { messages } = state;\n      const found = messages.filter(m => m.timestamp === action.timestamp);\n      const filtered = messages.filter(m => m.timestamp !== action.timestamp);\n      if (found.length) {\n        const toast = found[0];\n        clearTimeout(toast.timer());\n      }\n      return {\n        messages: [...filtered]\n      }\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`)\n    }\n  }\n}\nfunction ToastProvider({ children }) {\n  const [state, dispatch] = useReducer(ToastReducer, { messages: [] });\n  return (\n    <ToastStateContext.Provider value={state}>\n      <ToastDispatchContext.Provider value={dispatch}>\n        <ToastConsumer>{children}</ToastConsumer>\n      </ToastDispatchContext.Provider>\n    </ToastStateContext.Provider>\n  )\n}\n\nfunction useToastState() {\n  const context = useContext(ToastStateContext);\n  if (context === undefined) {\n    throw new Error('useToastState must be used within a ToastProvider')\n  }\n  return context\n}\nfunction useToastDispatch() {\n  const context = useContext(ToastDispatchContext);\n  if (context === undefined) {\n    throw new Error('useToastDispatch must be used within a ToastProvider')\n  }\n  return context\n}\nfunction useToastShow() {\n  const dispatch = useToastDispatch();\n\n  return (msg, timeout, theme, className, customStyle) => {\n    if (!msg) return;\n    const timestamp = Date.now();\n    const removeTimeout = () => setTimeout(() => {\n      dispatch({ type: 'remove', timestamp });\n    }, timeout || 5000);\n    const toastObj = {\n      type: 'show',\n      toast: {\n        msg,\n        timer() {\n          return removeTimeout();\n        },\n        timestamp,\n        theme,\n        customStyle,\n        className\n      },\n    }\n    dispatch(toastObj);\n    removeTimeout()\n  }\n}\nfunction ToastConsumer({ children }) {\n  const state = useToastState()\n  console.log(state)\n  useEffect(() => {\n    const firstChildEl = document.querySelector('.toast-wrapper');\n    if (firstChildEl && firstChildEl.lastChild) {\n      firstChildEl.lastChild.scrollIntoView({\n        behavior: 'smooth'\n      })\n    }\n  }, [state])\n  return (\n    <ToastStateContext.Consumer>\n      {\n        context => {\n          if (context === undefined) {\n            throw new Error('ToastConsumer must be used within a ToastProvider')\n          }\n          const { messages } = context;\n          return (\n            <ToastDispatchContext.Consumer>\n              {dispatch => (\n                <div>\n                  {children}\n                  {messages.length ? (\n                    <div\n                      className={`toast-wrapper ${style['toast-wrapper']}`}>\n                      {\n                        messages.map(m => (\n                          <div\n                            className={`toast ${style['toast']}${' ' + style[m.theme] || ''}${' ' + m.className || ''}`}\n                            role=\"alert\"\n                            key={'_' + Math.random() * m.timestamp}\n                            style={m.customStyle && m.customStyle.toaster ? m.customStyle.toaster : {}}>\n                            <span>{m.msg}</span>\n                            <br></br>\n                            <button\n                              className={style['toast-btn']}\n                              onClick={() => dispatch({ type: 'remove', timestamp: m.timestamp })}\n                              style={m.customStyle && m.customStyle.button ? m.customStyle.button : {}}>\n                              &times;\n                              </button>\n                          </div>\n                        ))\n                      }\n                    </div>\n                  ) : null}\n                </div>\n              )}\n            </ToastDispatchContext.Consumer>\n          )\n        }\n      }\n    </ToastStateContext.Consumer>\n  )\n}\nfunction useToast() {\n  return [useToastState(), useToastDispatch()]\n}\n\nfunction withShowToast(WrappedComponent) {\n  return function (props) {\n    const showToast = useToastShow();\n    return <WrappedComponent {...props} showToast={showToast} />\n  }\n}\nexport { useToast, ToastProvider, ToastConsumer, useToastShow, withShowToast };","import React from 'react';\nimport { withShowToast } from 'react-simple-toaster';\n\nclass ClassComponent extends React.Component {\n  render() {\n    const { showToast } = this.props;\n    return (\n      <div className=\"container\">\n        <h1>Class Component</h1>\n        <br />\n        <button className=\"btn\" onClick={() => showToast('Toast from Class based component')}>ClassComponent Button</button>\n      </div>\n    )\n  }\n}\nexport default withShowToast(ClassComponent)","import React from 'react'\n\nimport { useToastShow, ToastProvider } from 'react-simple-toaster'\nimport 'react-simple-toaster/dist/index.css'\nimport ClassComponent from './ClassComponent';\n\nconst App = () => {\n  const showToast = useToastShow();\n  return (\n    <div className=\"container\">\n      <h1>Functional Component</h1>\n      <button\n        onClick={() => showToast('Toast from functional component', 1000000)}\n        className=\"btn\">\n        Show Toast\n      </button>\n      <button\n        onClick={() => showToast('Toast from functional component', 1000000, 'dark')}\n        className=\"btn dark\">\n        Dark Theme\n      </button>\n      <button\n        onClick={() => showToast('Toast from functional component', 1000000, 'success')}\n        className=\"btn success\">\n        Success Theme\n      </button>\n      <button\n        onClick={() => showToast('Toast from functional component', 1000000, 'danger')}\n        className=\"btn danger\">\n        Danger Theme\n      </button>\n      <button\n        onClick={() => showToast('Toast from functional component', 1000000, 'warning')}\n        className=\"btn warning\">\n        Warning Theme\n      </button>\n      <button\n        onClick={() => showToast('Toast from functional component', 1000000, 'info')}\n        className=\"btn info\">\n        Info Theme\n      </button>\n    </div >\n  )\n}\nconst ToastWrapper = () => (\n  <ToastProvider>\n    <div className=\"App\">\n      <App />\n    </div>\n  </ToastProvider>\n)\nexport default ToastWrapper\n","import './index.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}